
\RequirePackage[latin1]{inputenc}
\RequirePackage[T1]{fontenc}
\RequirePackage[french]{babel}
\RequirePackage{beton}
\RequirePackage{ifthen}
\RequirePackage{comment}
\RequirePackage{verbatim}
\newif\hasnoid
\catcode`\_=12


\def\Application@name{Please give a name to the application}
\def\writer@name{No author given}

\def\Application #1 by #2.{%
\global\def\ApplicationName{#1}
\global\def\writer@name{#2}}
\usepackage{multicol}


\AtBeginDocument{%
\title{Application {\tt \ApplicationName}}
\author{\writer@name}
\date{\today}
\openfile\railsscriptfile{\ApplicationName.sh}
\immediate\write\railsscriptfile{#! /bin/bash}
\shellcode{source /home/ychevali/bin/ror_make_new_app.sh}
\shellcode{make_new_app \ApplicationName}


}


\def\AfterIncludedComment{\immediate\closeout\CommentStream\relax}
\includecomment{code}
\newenvironment{rubycode}[1]{%
\def\CommentCutFile{\ApplicationName/#1}%
}{
\begin{figure}[htbp]
\begin{multicols}{2}\begingroup\ttfamily\footnotesize
\verbatiminput{\CommentCutFile}%
\endgroup\end{multicols}
\caption{\label{code:\CommentCutFile}Code du fichier \CommentCutFile.}%
\end{figure}}



\AtEndDocument{%
\immediate\closeout\railsscriptfile
}


% Output shell script
\newwrite\railsscriptfile
\def\@openfile#1#2{\immediate\openout#1=#2}
\def\openfile#1#2{\@expandtwoargs\@openfile{#1}{#2}}

\def\shellcode#1{\immediate\write\railsscriptfile{#1}}


% Modeles
\def\low@A{a}
\def\low@B{b}
\def\low@C{c}
\def\low@D{d}
\def\low@E{e}
\def\low@F{f}
\def\low@G{g}
\def\low@H{h}
\def\low@I{i}
\def\low@J{j}
\def\low@K{k}
\def\low@L{l}
\def\low@M{m}
\def\low@N{n}
\def\low@O{o}
\def\low@P{p}
\def\low@Q{q}
\def\low@R{r}
\def\low@S{s}
\def\low@T{t}
\def\low@U{u}
\def\low@V{v}
\def\low@W{w}
\def\low@X{x}
\def\low@Y{y}
\def\low@Z{z}

\def\module #1#2.{%
\global\def\current@model@name{#1#2 }
\global\def\current@model@lname{\csname low@#1\endcsname #2}
\newpage
\section{#1#2}
\expandafter\label{module:\current@model@lname}
\shellcode{## Modele \current@model@lname}
}
\def\modele{\subsection{Mod{\`e}le}
\expandafter\label{modele:\current@model@lname}}
\def\controleur{\subsection{Contr{\^o}leur}
\expandafter\label{controleur:\current@model@lname}}
\def\vue{\subsection{Vue}
\expandafter\label{vue:\current@model@lname}}

\newenvironment{relation}{%
\gdef\hasnoid{t}
\gdef\commandline{rails generate model \current@model@name }
\begin{center}
  \begin{tabular}{|l|p{0.45\linewidth}|l|l|}
    \hline
    \multicolumn 4{|c|} {\bf Table \current@model@name}\\[1ex]
    \hline
    \multicolumn 1{|c|}{\bf Nom} &
    \multicolumn 1{c|}{\bf Description} & 
    \multicolumn 1{c|}{\bf Type} & 
    \multicolumn 1{c|}{\bf Clef ?} \\[1ex]
    \hline}{
  \end{tabular}
\end{center}
\@expandtwoargs\shellcode{\commandline}{}
\if t\hasnoid\shellcode{sed -i -e 's/do/, index: false do/' db/migrate/*create_\current@model@lname s.rb}\fi
}

\def\champs #1.#2.#3.#4.{%
\ifthenelse{\equal{#1}{id}}{\gdef\hasnoid{f}}{\xdef\commandline{\commandline #1:#3 }}
#1 & #2 & #3 & #4\\[1ex] \hline
}

\def\shelladdmethod #1#2:#3=#4.{%
\shellcode{cat >> app/models/\csname low@#1\endcsname #2.rb << EOF}
\shellcode{class #1#2 < ActiveRecord::Base}
\shellcode{  def #3}
\shellcode{    #4}
\shellcode{  end}
\shellcode{end}
\shellcode{EOF}}

\def\setassoc#1.{%
\shellcode{cat >> app/models/\current@model@lname.rb << EOF}
\shellcode{}
\shellcode{class \current@model@name < ActiveRecord::Base}
\shellcode{  #1}
\shellcode{end}
\shellcode{EOF}
\centerline{#1}}

\def\setindex #1: #2.{%
\shellcode{rails generate migration #1}
\shellcode{sed -e '/up/ a add_index :\current@model@lname s, :#2,:name => "#1",  db/migrate/*_#1.rb}
\shellcode{sed -e '/down/ a remove_index :\current@model@lname s, :name => "#2" ' db/migrate/*_#1.rb}}
\def\setuniqueindex#1#2{%
\shellcode{rails generate migration #1}
\shellcode{sed -e '/up/ a add_index :\current@model@lname s, :#2,:name => "#1", :unique => true'  db/migrate/*_#1.rb}
\shellcode{sed -e '/down/ a remove_index :\current@model@lname s,
  :name => "#2" ' db/migrate/*_#1.rb}}
